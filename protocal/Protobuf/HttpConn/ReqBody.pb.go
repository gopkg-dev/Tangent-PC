// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ReqBody.proto

package HttpConn

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqBody struct {
	HttpConnVer          *uint32          `protobuf:"varint,1,req,name=httpConnVer" json:"httpConnVer,omitempty"`
	Sig                  *HttpConnSig     `protobuf:"bytes,4,req,name=Sig" json:"Sig,omitempty"`
	Skey                 *ReqBody_SigSkey `protobuf:"bytes,6,req,name=Skey" json:"Skey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReqBody) Reset()         { *m = ReqBody{} }
func (m *ReqBody) String() string { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()    {}
func (*ReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c5066afefd985d, []int{0}
}
func (m *ReqBody) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReqBody.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBody.Merge(m, src)
}
func (m *ReqBody) XXX_Size() int {
	return m.Size()
}
func (m *ReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBody proto.InternalMessageInfo

func (m *ReqBody) GetHttpConnVer() uint32 {
	if m != nil && m.HttpConnVer != nil {
		return *m.HttpConnVer
	}
	return 0
}

func (m *ReqBody) GetSig() *HttpConnSig {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *ReqBody) GetSkey() *ReqBody_SigSkey {
	if m != nil {
		return m.Skey
	}
	return nil
}

type ReqBody_SigSkey struct {
	CsVer                *uint32  `protobuf:"varint,1,req,name=CsVer" json:"CsVer,omitempty"`
	Skey                 *string  `protobuf:"bytes,2,req,name=Skey" json:"Skey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBody_SigSkey) Reset()         { *m = ReqBody_SigSkey{} }
func (m *ReqBody_SigSkey) String() string { return proto.CompactTextString(m) }
func (*ReqBody_SigSkey) ProtoMessage()    {}
func (*ReqBody_SigSkey) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c5066afefd985d, []int{0, 0}
}
func (m *ReqBody_SigSkey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReqBody_SigSkey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReqBody_SigSkey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReqBody_SigSkey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBody_SigSkey.Merge(m, src)
}
func (m *ReqBody_SigSkey) XXX_Size() int {
	return m.Size()
}
func (m *ReqBody_SigSkey) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBody_SigSkey.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBody_SigSkey proto.InternalMessageInfo

func (m *ReqBody_SigSkey) GetCsVer() uint32 {
	if m != nil && m.CsVer != nil {
		return *m.CsVer
	}
	return 0
}

func (m *ReqBody_SigSkey) GetSkey() string {
	if m != nil && m.Skey != nil {
		return *m.Skey
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqBody)(nil), "HttpConn.ReqBody")
	proto.RegisterType((*ReqBody_SigSkey)(nil), "HttpConn.ReqBody.SigSkey")
}

func init() { proto.RegisterFile("ReqBody.proto", fileDescriptor_a9c5066afefd985d) }

var fileDescriptor_a9c5066afefd985d = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0d, 0x4a, 0x2d, 0x74,
	0xca, 0x4f, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xf0, 0x28, 0x29, 0x29, 0x70,
	0xce, 0xcf, 0xcb, 0x93, 0x12, 0x70, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0xf1, 0xcc, 0x4b, 0xcb, 0x87,
	0xc8, 0x29, 0xed, 0x60, 0xe4, 0x62, 0x87, 0xaa, 0x16, 0x52, 0xe0, 0xe2, 0xce, 0x80, 0xaa, 0x0c,
	0x4b, 0x2d, 0x92, 0x60, 0x54, 0x60, 0xd2, 0xe0, 0x0d, 0x42, 0x16, 0x12, 0x52, 0xe7, 0x62, 0x0e,
	0xce, 0x4c, 0x97, 0x60, 0x51, 0x60, 0xd2, 0xe0, 0x36, 0x12, 0xd5, 0x83, 0x99, 0x0b, 0x67, 0x04,
	0x67, 0xa6, 0x07, 0x81, 0x54, 0x08, 0xe9, 0x72, 0xb1, 0x04, 0x67, 0xa7, 0x56, 0x4a, 0xb0, 0x81,
	0x55, 0x4a, 0x22, 0x54, 0xc2, 0x5c, 0x16, 0x9c, 0x99, 0x0e, 0x52, 0x10, 0x04, 0x56, 0x26, 0x65,
	0xcc, 0xc5, 0x0e, 0x15, 0x10, 0x12, 0xe1, 0x62, 0x75, 0x2e, 0x46, 0x58, 0x0f, 0xe1, 0x08, 0x09,
	0x41, 0xcd, 0x63, 0x52, 0x60, 0xd2, 0xe0, 0x84, 0x68, 0x72, 0x12, 0x38, 0xf1, 0x48, 0x8e, 0xf1,
	0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x67, 0x3c, 0x96, 0x63, 0x00, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x6a, 0x8d, 0x9e, 0x1a, 0xf8, 0x00, 0x00, 0x00,
}

func (m *ReqBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReqBody) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReqBody) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Skey == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Skey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReqBody(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Sig == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Sig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReqBody(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.HttpConnVer == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintReqBody(dAtA, i, uint64(*m.HttpConnVer))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReqBody_SigSkey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReqBody_SigSkey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReqBody_SigSkey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Skey == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Skey)
		copy(dAtA[i:], *m.Skey)
		i = encodeVarintReqBody(dAtA, i, uint64(len(*m.Skey)))
		i--
		dAtA[i] = 0x12
	}
	if m.CsVer == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintReqBody(dAtA, i, uint64(*m.CsVer))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintReqBody(dAtA []byte, offset int, v uint64) int {
	offset -= sovReqBody(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ReqBody) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HttpConnVer != nil {
		n += 1 + sovReqBody(uint64(*m.HttpConnVer))
	}
	if m.Sig != nil {
		l = m.Sig.Size()
		n += 1 + l + sovReqBody(uint64(l))
	}
	if m.Skey != nil {
		l = m.Skey.Size()
		n += 1 + l + sovReqBody(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReqBody_SigSkey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CsVer != nil {
		n += 1 + sovReqBody(uint64(*m.CsVer))
	}
	if m.Skey != nil {
		l = len(*m.Skey)
		n += 1 + l + sovReqBody(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovReqBody(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozReqBody(x uint64) (n int) {
	return sovReqBody(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ReqBody) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReqBody
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReqBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReqBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpConnVer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HttpConnVer = &v
			hasFields[0] |= uint64(0x00000001)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReqBody
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReqBody
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sig == nil {
				m.Sig = &HttpConnSig{}
			}
			if err := m.Sig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Skey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReqBody
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReqBody
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Skey == nil {
				m.Skey = &ReqBody_SigSkey{}
			}
			if err := m.Skey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipReqBody(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReqBody
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReqBody_SigSkey) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReqBody
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SigSkey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SigSkey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CsVer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CsVer = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Skey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReqBody
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReqBody
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Skey = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipReqBody(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReqBody
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipReqBody(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowReqBody
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReqBody
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthReqBody
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupReqBody
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthReqBody
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthReqBody        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowReqBody          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupReqBody = fmt.Errorf("proto: unexpected end of group")
)
