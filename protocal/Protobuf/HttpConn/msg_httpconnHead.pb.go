// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg_httpconnHead.proto

package HttpConn

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgHttpConnHead struct {
	Uin                  *uint32                     `protobuf:"varint,1,req,name=Uin" json:"Uin,omitempty"`
	Command              *uint32                     `protobuf:"varint,2,req,name=command" json:"command,omitempty"`
	SubCommand           *uint32                     `protobuf:"varint,3,req,name=subCommand" json:"subCommand,omitempty"`
	Seq                  *uint32                     `protobuf:"varint,4,req,name=seq" json:"seq,omitempty"`
	ClientVer            *uint32                     `protobuf:"varint,5,req,name=ClientVer" json:"ClientVer,omitempty"`
	DwClientType         *uint32                     `protobuf:"varint,7,req,name=DwClientType" json:"DwClientType,omitempty"`
	DwPubNo              *uint32                     `protobuf:"varint,8,req,name=DwPubNo" json:"DwPubNo,omitempty"`
	ServiceId            *uint32                     `protobuf:"varint,17,req,name=ServiceId" json:"ServiceId,omitempty"`
	BufSigHttpConnToken  []byte                      `protobuf:"bytes,18,req,name=BufSigHttpConnToken" json:"BufSigHttpConnToken,omitempty"`
	Flag                 *uint32                     `protobuf:"varint,19,req,name=flag" json:"flag,omitempty"`
	CompressType         *uint32                     `protobuf:"varint,24,req,name=compress_type,json=compressType" json:"compress_type,omitempty"`
	MsgOiDbHead          *MsgHttpConnHeadMsgOidbhead `protobuf:"bytes,25,req,name=msgOiDbHead" json:"msgOiDbHead,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MsgHttpConnHead) Reset()         { *m = MsgHttpConnHead{} }
func (m *MsgHttpConnHead) String() string { return proto.CompactTextString(m) }
func (*MsgHttpConnHead) ProtoMessage()    {}
func (*MsgHttpConnHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f3b81f6772727f3, []int{0}
}
func (m *MsgHttpConnHead) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgHttpConnHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgHttpConnHead.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgHttpConnHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHttpConnHead.Merge(m, src)
}
func (m *MsgHttpConnHead) XXX_Size() int {
	return m.Size()
}
func (m *MsgHttpConnHead) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHttpConnHead.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHttpConnHead proto.InternalMessageInfo

func (m *MsgHttpConnHead) GetUin() uint32 {
	if m != nil && m.Uin != nil {
		return *m.Uin
	}
	return 0
}

func (m *MsgHttpConnHead) GetCommand() uint32 {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return 0
}

func (m *MsgHttpConnHead) GetSubCommand() uint32 {
	if m != nil && m.SubCommand != nil {
		return *m.SubCommand
	}
	return 0
}

func (m *MsgHttpConnHead) GetSeq() uint32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

func (m *MsgHttpConnHead) GetClientVer() uint32 {
	if m != nil && m.ClientVer != nil {
		return *m.ClientVer
	}
	return 0
}

func (m *MsgHttpConnHead) GetDwClientType() uint32 {
	if m != nil && m.DwClientType != nil {
		return *m.DwClientType
	}
	return 0
}

func (m *MsgHttpConnHead) GetDwPubNo() uint32 {
	if m != nil && m.DwPubNo != nil {
		return *m.DwPubNo
	}
	return 0
}

func (m *MsgHttpConnHead) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *MsgHttpConnHead) GetBufSigHttpConnToken() []byte {
	if m != nil {
		return m.BufSigHttpConnToken
	}
	return nil
}

func (m *MsgHttpConnHead) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *MsgHttpConnHead) GetCompressType() uint32 {
	if m != nil && m.CompressType != nil {
		return *m.CompressType
	}
	return 0
}

func (m *MsgHttpConnHead) GetMsgOiDbHead() *MsgHttpConnHeadMsgOidbhead {
	if m != nil {
		return m.MsgOiDbHead
	}
	return nil
}

type MsgHttpConnHeadMsgOidbhead struct {
	OidbCommand          *uint32  `protobuf:"varint,1,req,name=OidbCommand" json:"OidbCommand,omitempty"`
	ServiceType          *uint32  `protobuf:"varint,2,req,name=service_type,json=serviceType" json:"service_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgHttpConnHeadMsgOidbhead) Reset()         { *m = MsgHttpConnHeadMsgOidbhead{} }
func (m *MsgHttpConnHeadMsgOidbhead) String() string { return proto.CompactTextString(m) }
func (*MsgHttpConnHeadMsgOidbhead) ProtoMessage()    {}
func (*MsgHttpConnHeadMsgOidbhead) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f3b81f6772727f3, []int{0, 0}
}
func (m *MsgHttpConnHeadMsgOidbhead) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgHttpConnHeadMsgOidbhead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgHttpConnHeadMsgOidbhead.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgHttpConnHeadMsgOidbhead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHttpConnHeadMsgOidbhead.Merge(m, src)
}
func (m *MsgHttpConnHeadMsgOidbhead) XXX_Size() int {
	return m.Size()
}
func (m *MsgHttpConnHeadMsgOidbhead) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHttpConnHeadMsgOidbhead.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHttpConnHeadMsgOidbhead proto.InternalMessageInfo

func (m *MsgHttpConnHeadMsgOidbhead) GetOidbCommand() uint32 {
	if m != nil && m.OidbCommand != nil {
		return *m.OidbCommand
	}
	return 0
}

func (m *MsgHttpConnHeadMsgOidbhead) GetServiceType() uint32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgHttpConnHead)(nil), "HttpConn.msg_httpConn_head")
	proto.RegisterType((*MsgHttpConnHeadMsgOidbhead)(nil), "HttpConn.msg_httpConn_head.msg_oidbhead")
}

func init() { proto.RegisterFile("msg_httpconnHead.proto", fileDescriptor_3f3b81f6772727f3) }

var fileDescriptor_3f3b81f6772727f3 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4e, 0x2a, 0x31,
	0x18, 0xc5, 0xef, 0x0c, 0xdc, 0xc0, 0xfd, 0x66, 0x48, 0xa0, 0x24, 0x37, 0xbd, 0x37, 0x66, 0x32,
	0xe2, 0x66, 0x56, 0xc4, 0xf8, 0x08, 0xc0, 0x02, 0x5d, 0x88, 0x01, 0x74, 0x4b, 0xe6, 0x4f, 0x19,
	0x1a, 0x99, 0x76, 0x98, 0x16, 0x89, 0x6f, 0xe2, 0x23, 0xb9, 0xf4, 0x11, 0x0c, 0x3e, 0x84, 0x5b,
	0xd3, 0x96, 0xc1, 0x31, 0xba, 0xeb, 0xf9, 0x9d, 0xf6, 0xe4, 0xf4, 0xfb, 0xe0, 0x6f, 0x26, 0xd2,
	0xc5, 0x4a, 0xca, 0x3c, 0xe6, 0x8c, 0x8d, 0x49, 0x98, 0xf4, 0xf3, 0x82, 0x4b, 0x8e, 0x9a, 0x63,
	0x29, 0xf3, 0x21, 0x67, 0xac, 0xf7, 0x5e, 0x83, 0x4e, 0x79, 0x49, 0x81, 0xc5, 0x8a, 0x84, 0x09,
	0x6a, 0x43, 0xed, 0x96, 0x32, 0x6c, 0xf9, 0x76, 0xd0, 0x9a, 0xaa, 0x23, 0xc2, 0xd0, 0x88, 0x79,
	0x96, 0x85, 0x2c, 0xc1, 0xb6, 0xa6, 0xa5, 0x44, 0x1e, 0x80, 0xd8, 0x46, 0xc3, 0x83, 0x59, 0xd3,
	0x66, 0x85, 0xa8, 0x2c, 0x41, 0x36, 0xb8, 0x6e, 0xb2, 0x04, 0xd9, 0xa0, 0x13, 0xf8, 0x33, 0x5c,
	0x53, 0xc2, 0xe4, 0x1d, 0x29, 0xf0, 0x6f, 0xcd, 0x3f, 0x01, 0xea, 0x81, 0x3b, 0xda, 0x19, 0x39,
	0x7f, 0xcc, 0x09, 0x6e, 0xe8, 0x0b, 0x5f, 0x98, 0x6a, 0x33, 0xda, 0xdd, 0x6c, 0xa3, 0x6b, 0x8e,
	0x9b, 0xa6, 0xcd, 0x41, 0xaa, 0xec, 0x19, 0x29, 0x1e, 0x68, 0x4c, 0x2e, 0x13, 0xdc, 0x31, 0xd9,
	0x47, 0x80, 0xce, 0xa1, 0x3b, 0xd8, 0x2e, 0x67, 0x34, 0x2d, 0xff, 0x3f, 0xe7, 0xf7, 0x84, 0x61,
	0xe4, 0xdb, 0x81, 0x3b, 0xfd, 0xc9, 0x42, 0x08, 0xea, 0xcb, 0x75, 0x98, 0xe2, 0xae, 0x8e, 0xd2,
	0x67, 0x74, 0x06, 0xad, 0x98, 0x67, 0x79, 0x41, 0x84, 0x58, 0x48, 0x55, 0x11, 0x9b, 0x8a, 0x25,
	0xd4, 0x15, 0xaf, 0xc0, 0xc9, 0x44, 0x3a, 0xa1, 0xa3, 0x48, 0xcd, 0x1d, 0xff, 0xf3, 0xed, 0xc0,
	0xb9, 0x08, 0xfa, 0x65, 0x7a, 0xff, 0xdb, 0xd0, 0x35, 0xe1, 0x34, 0x89, 0x94, 0x98, 0x56, 0x1f,
	0xff, 0x9f, 0x81, 0x5b, 0x35, 0x91, 0x0f, 0xce, 0x84, 0x26, 0xc7, 0x99, 0x9b, 0x35, 0x55, 0x11,
	0x3a, 0x05, 0x57, 0x98, 0x5f, 0x9b, 0x86, 0x66, 0x67, 0xce, 0x81, 0xa9, 0x82, 0x83, 0xf6, 0xf3,
	0xde, 0xb3, 0x5e, 0xf6, 0x9e, 0xf5, 0xba, 0xf7, 0xac, 0xa7, 0x37, 0xef, 0xd7, 0x47, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd8, 0x91, 0xaf, 0x1e, 0x2e, 0x02, 0x00, 0x00,
}

func (m *MsgHttpConnHead) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgHttpConnHead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgHttpConnHead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgOiDbHead == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.MsgOiDbHead.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if m.CompressType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.CompressType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.Flag == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.Flag))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.BufSigHttpConnToken == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(m.BufSigHttpConnToken)
		copy(dAtA[i:], m.BufSigHttpConnToken)
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(len(m.BufSigHttpConnToken)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.ServiceId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.ServiceId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.DwPubNo == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.DwPubNo))
		i--
		dAtA[i] = 0x40
	}
	if m.DwClientType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.DwClientType))
		i--
		dAtA[i] = 0x38
	}
	if m.ClientVer == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.ClientVer))
		i--
		dAtA[i] = 0x28
	}
	if m.Seq == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.Seq))
		i--
		dAtA[i] = 0x20
	}
	if m.SubCommand == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.SubCommand))
		i--
		dAtA[i] = 0x18
	}
	if m.Command == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.Command))
		i--
		dAtA[i] = 0x10
	}
	if m.Uin == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.Uin))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgHttpConnHeadMsgOidbhead) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgHttpConnHeadMsgOidbhead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgHttpConnHeadMsgOidbhead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ServiceType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.ServiceType))
		i--
		dAtA[i] = 0x10
	}
	if m.OidbCommand == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintMsgHttpconnHead(dAtA, i, uint64(*m.OidbCommand))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsgHttpconnHead(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgHttpconnHead(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgHttpConnHead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uin != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.Uin))
	}
	if m.Command != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.Command))
	}
	if m.SubCommand != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.SubCommand))
	}
	if m.Seq != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.Seq))
	}
	if m.ClientVer != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.ClientVer))
	}
	if m.DwClientType != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.DwClientType))
	}
	if m.DwPubNo != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.DwPubNo))
	}
	if m.ServiceId != nil {
		n += 2 + sovMsgHttpconnHead(uint64(*m.ServiceId))
	}
	if m.BufSigHttpConnToken != nil {
		l = len(m.BufSigHttpConnToken)
		n += 2 + l + sovMsgHttpconnHead(uint64(l))
	}
	if m.Flag != nil {
		n += 2 + sovMsgHttpconnHead(uint64(*m.Flag))
	}
	if m.CompressType != nil {
		n += 2 + sovMsgHttpconnHead(uint64(*m.CompressType))
	}
	if m.MsgOiDbHead != nil {
		l = m.MsgOiDbHead.Size()
		n += 2 + l + sovMsgHttpconnHead(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgHttpConnHeadMsgOidbhead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OidbCommand != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.OidbCommand))
	}
	if m.ServiceType != nil {
		n += 1 + sovMsgHttpconnHead(uint64(*m.ServiceType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMsgHttpconnHead(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgHttpconnHead(x uint64) (n int) {
	return sovMsgHttpconnHead(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgHttpConnHead) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgHttpconnHead
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: msg_httpConn_head: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: msg_httpConn_head: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uin", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uin = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Command", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Command = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubCommand", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubCommand = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seq", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Seq = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientVer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClientVer = &v
			hasFields[0] |= uint64(0x00000010)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwClientType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DwClientType = &v
			hasFields[0] |= uint64(0x00000020)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwPubNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DwPubNo = &v
			hasFields[0] |= uint64(0x00000040)
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ServiceId = &v
			hasFields[0] |= uint64(0x00000080)
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BufSigHttpConnToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BufSigHttpConnToken = append(m.BufSigHttpConnToken[:0], dAtA[iNdEx:postIndex]...)
			if m.BufSigHttpConnToken == nil {
				m.BufSigHttpConnToken = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000100)
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Flag = &v
			hasFields[0] |= uint64(0x00000200)
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompressType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CompressType = &v
			hasFields[0] |= uint64(0x00000400)
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgOiDbHead", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MsgOiDbHead == nil {
				m.MsgOiDbHead = &MsgHttpConnHeadMsgOidbhead{}
			}
			if err := m.MsgOiDbHead.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000800)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgHttpconnHead(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000400) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000800) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgHttpConnHeadMsgOidbhead) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgHttpconnHead
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: msg_oidbhead: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: msg_oidbhead: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OidbCommand", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OidbCommand = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ServiceType = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgHttpconnHead(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgHttpconnHead
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgHttpconnHead(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgHttpconnHead
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgHttpconnHead
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgHttpconnHead
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgHttpconnHead
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgHttpconnHead
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgHttpconnHead        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgHttpconnHead          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgHttpconnHead = fmt.Errorf("proto: unexpected end of group")
)
