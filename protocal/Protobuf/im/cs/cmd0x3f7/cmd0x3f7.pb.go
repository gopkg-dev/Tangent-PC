// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cmd0x3f7.proto

package cmd0x3f7

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Targer struct {
	WCsCmdNo             *uint32  `protobuf:"varint,1,req,name=wCsCmdNo,def=1" json:"wCsCmdNo,omitempty"`
	GroupSub             *Info    `protobuf:"bytes,2,req,name=GroupSub" json:"GroupSub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Targer) Reset()         { *m = Targer{} }
func (m *Targer) String() string { return proto.CompactTextString(m) }
func (*Targer) ProtoMessage()    {}
func (*Targer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{0}
}
func (m *Targer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Targer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Targer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Targer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Targer.Merge(m, src)
}
func (m *Targer) XXX_Size() int {
	return m.Size()
}
func (m *Targer) XXX_DiscardUnknown() {
	xxx_messageInfo_Targer.DiscardUnknown(m)
}

var xxx_messageInfo_Targer proto.InternalMessageInfo

const Default_Targer_WCsCmdNo uint32 = 1

func (m *Targer) GetWCsCmdNo() uint32 {
	if m != nil && m.WCsCmdNo != nil {
		return *m.WCsCmdNo
	}
	return Default_Targer_WCsCmdNo
}

func (m *Targer) GetGroupSub() *Info {
	if m != nil {
		return m.GroupSub
	}
	return nil
}

type Info struct {
	SubCmd               *uint32  `protobuf:"varint,19,opt,name=SubCmd" json:"SubCmd,omitempty"`
	GroupType            *uint32  `protobuf:"varint,51,opt,name=GroupType" json:"GroupType,omitempty"`
	DwRequestId          *uint64  `protobuf:"varint,52,opt,name=dwRequestId,def=1" json:"dwRequestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{1}
}
func (m *Info) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Info.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return m.Size()
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

const Default_Info_DwRequestId uint64 = 1

func (m *Info) GetSubCmd() uint32 {
	if m != nil && m.SubCmd != nil {
		return *m.SubCmd
	}
	return 0
}

func (m *Info) GetGroupType() uint32 {
	if m != nil && m.GroupType != nil {
		return *m.GroupType
	}
	return 0
}

func (m *Info) GetDwRequestId() uint64 {
	if m != nil && m.DwRequestId != nil {
		return *m.DwRequestId
	}
	return Default_Info_DwRequestId
}

//------------------------------------
type Msg struct {
	WCsCmdNo             *uint32  `protobuf:"varint,1,req,name=wCsCmdNo" json:"wCsCmdNo,omitempty"`
	Tag2                 *uint32  `protobuf:"varint,2,req,name=tag2" json:"tag2,omitempty"`
	GroupCode            *uint64  `protobuf:"varint,3,req,name=GroupCode" json:"GroupCode,omitempty"`
	Cs                   *Cs      `protobuf:"bytes,4,req,name=cs" json:"cs,omitempty"`
	Tag5                 *Tag5    `protobuf:"bytes,5,req,name=tag5" json:"tag5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{2}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return m.Size()
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetWCsCmdNo() uint32 {
	if m != nil && m.WCsCmdNo != nil {
		return *m.WCsCmdNo
	}
	return 0
}

func (m *Msg) GetTag2() uint32 {
	if m != nil && m.Tag2 != nil {
		return *m.Tag2
	}
	return 0
}

func (m *Msg) GetGroupCode() uint64 {
	if m != nil && m.GroupCode != nil {
		return *m.GroupCode
	}
	return 0
}

func (m *Msg) GetCs() *Cs {
	if m != nil {
		return m.Cs
	}
	return nil
}

func (m *Msg) GetTag5() *Tag5 {
	if m != nil {
		return m.Tag5
	}
	return nil
}

type Cs struct {
	MsgSeq               *uint32  `protobuf:"varint,1,req,name=MsgSeq" json:"MsgSeq,omitempty"`
	MsgID                *uint32  `protobuf:"varint,2,req,name=MsgID" json:"MsgID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cs) Reset()         { *m = Cs{} }
func (m *Cs) String() string { return proto.CompactTextString(m) }
func (*Cs) ProtoMessage()    {}
func (*Cs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{3}
}
func (m *Cs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Cs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Cs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Cs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cs.Merge(m, src)
}
func (m *Cs) XXX_Size() int {
	return m.Size()
}
func (m *Cs) XXX_DiscardUnknown() {
	xxx_messageInfo_Cs.DiscardUnknown(m)
}

var xxx_messageInfo_Cs proto.InternalMessageInfo

func (m *Cs) GetMsgSeq() uint32 {
	if m != nil && m.MsgSeq != nil {
		return *m.MsgSeq
	}
	return 0
}

func (m *Cs) GetMsgID() uint32 {
	if m != nil && m.MsgID != nil {
		return *m.MsgID
	}
	return 0
}

type Tag5 struct {
	Tag1                 *uint32   `protobuf:"varint,1,req,name=tag1" json:"tag1,omitempty"`
	Tag2                 *Tag5Tag2 `protobuf:"bytes,2,req,name=tag2" json:"tag2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Tag5) Reset()         { *m = Tag5{} }
func (m *Tag5) String() string { return proto.CompactTextString(m) }
func (*Tag5) ProtoMessage()    {}
func (*Tag5) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{4}
}
func (m *Tag5) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Tag5) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Tag5.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Tag5) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag5.Merge(m, src)
}
func (m *Tag5) XXX_Size() int {
	return m.Size()
}
func (m *Tag5) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag5.DiscardUnknown(m)
}

var xxx_messageInfo_Tag5 proto.InternalMessageInfo

func (m *Tag5) GetTag1() uint32 {
	if m != nil && m.Tag1 != nil {
		return *m.Tag1
	}
	return 0
}

func (m *Tag5) GetTag2() *Tag5Tag2 {
	if m != nil {
		return m.Tag2
	}
	return nil
}

type Tag5Tag2 struct {
	MsgSeq               *uint32  `protobuf:"varint,1,req,name=MsgSeq" json:"MsgSeq,omitempty"`
	Tag2                 *uint32  `protobuf:"varint,2,req,name=tag2" json:"tag2,omitempty"`
	Tag3                 *uint32  `protobuf:"varint,3,req,name=tag3" json:"tag3,omitempty"`
	Tag4                 *uint32  `protobuf:"varint,4,req,name=tag4" json:"tag4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag5Tag2) Reset()         { *m = Tag5Tag2{} }
func (m *Tag5Tag2) String() string { return proto.CompactTextString(m) }
func (*Tag5Tag2) ProtoMessage()    {}
func (*Tag5Tag2) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef7067a21f8f0368, []int{5}
}
func (m *Tag5Tag2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Tag5Tag2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Tag5Tag2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Tag5Tag2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag5Tag2.Merge(m, src)
}
func (m *Tag5Tag2) XXX_Size() int {
	return m.Size()
}
func (m *Tag5Tag2) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag5Tag2.DiscardUnknown(m)
}

var xxx_messageInfo_Tag5Tag2 proto.InternalMessageInfo

func (m *Tag5Tag2) GetMsgSeq() uint32 {
	if m != nil && m.MsgSeq != nil {
		return *m.MsgSeq
	}
	return 0
}

func (m *Tag5Tag2) GetTag2() uint32 {
	if m != nil && m.Tag2 != nil {
		return *m.Tag2
	}
	return 0
}

func (m *Tag5Tag2) GetTag3() uint32 {
	if m != nil && m.Tag3 != nil {
		return *m.Tag3
	}
	return 0
}

func (m *Tag5Tag2) GetTag4() uint32 {
	if m != nil && m.Tag4 != nil {
		return *m.Tag4
	}
	return 0
}

func init() {
	proto.RegisterType((*Targer)(nil), "cmd0x3f7.targer")
	proto.RegisterType((*Info)(nil), "cmd0x3f7.Info")
	proto.RegisterType((*Msg)(nil), "cmd0x3f7.msg")
	proto.RegisterType((*Cs)(nil), "cmd0x3f7.Cs")
	proto.RegisterType((*Tag5)(nil), "cmd0x3f7.tag5")
	proto.RegisterType((*Tag5Tag2)(nil), "cmd0x3f7.tag5_tag2")
}

func init() { proto.RegisterFile("cmd0x3f7.proto", fileDescriptor_ef7067a21f8f0368) }

var fileDescriptor_ef7067a21f8f0368 = []byte{
	// 344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4e, 0xc2, 0x40,
	0x14, 0x45, 0x9d, 0xa1, 0x10, 0x78, 0x08, 0x31, 0x83, 0x31, 0x13, 0x83, 0x4d, 0x33, 0x2e, 0x6c,
	0x5c, 0x10, 0x69, 0x21, 0x26, 0x2e, 0x1d, 0x13, 0xc3, 0x02, 0x17, 0x53, 0xf7, 0x04, 0x68, 0xe9,
	0xaa, 0x16, 0x3a, 0x6d, 0xd0, 0x0f, 0x31, 0xf1, 0x93, 0x5c, 0xfa, 0x09, 0x06, 0x7f, 0xc4, 0x74,
	0x3a, 0x16, 0x24, 0xba, 0x9b, 0x7b, 0x5e, 0x7b, 0xdf, 0xbd, 0x0f, 0xda, 0xf3, 0xc8, 0xbf, 0x7a,
	0x76, 0x17, 0xd7, 0xbd, 0x65, 0x12, 0xa7, 0x31, 0xa9, 0xff, 0x68, 0xe6, 0x41, 0x2d, 0x9d, 0x26,
	0x61, 0x90, 0x90, 0x33, 0xa8, 0xaf, 0xb9, 0xe4, 0x91, 0xff, 0x10, 0x53, 0x64, 0x61, 0xbb, 0x75,
	0x83, 0xfa, 0xa2, 0x44, 0xe4, 0x12, 0xea, 0xf7, 0x49, 0x9c, 0x2d, 0xbd, 0x6c, 0x46, 0xb1, 0x85,
	0xed, 0xa6, 0xd3, 0xee, 0x95, 0xae, 0xa3, 0xa7, 0x45, 0x2c, 0xca, 0x39, 0x9b, 0x82, 0x91, 0x13,
	0x72, 0x02, 0x35, 0x2f, 0x9b, 0xf1, 0xc8, 0xa7, 0x1d, 0x0b, 0xd9, 0x2d, 0xa1, 0x15, 0xe9, 0x42,
	0x43, 0x7d, 0xfb, 0xf8, 0xb2, 0x0c, 0xa8, 0xab, 0x46, 0x5b, 0x40, 0xce, 0xa1, 0xe9, 0xaf, 0x45,
	0xb0, 0xca, 0x02, 0x99, 0x8e, 0x7c, 0x3a, 0xb0, 0x90, 0x6d, 0xe4, 0x59, 0x76, 0x29, 0x7b, 0x45,
	0x50, 0x89, 0x64, 0x48, 0x4e, 0xf7, 0x53, 0xef, 0x44, 0x26, 0x60, 0xa4, 0xd3, 0xd0, 0x51, 0x71,
	0x5b, 0x42, 0xbd, 0xcb, 0xd5, 0x3c, 0xf6, 0x03, 0x5a, 0xb1, 0xb0, 0x6d, 0x88, 0x2d, 0x20, 0x5d,
	0xc0, 0x73, 0x49, 0x0d, 0x55, 0xef, 0x70, 0x5b, 0x8f, 0x4b, 0x81, 0xe7, 0x92, 0x30, 0xe5, 0x37,
	0xa4, 0xd5, 0xfd, 0xfa, 0x39, 0x55, 0xfe, 0x43, 0xe6, 0x00, 0xe6, 0x32, 0x2f, 0x3e, 0x96, 0xa1,
	0x17, 0xac, 0x74, 0x26, 0xad, 0xc8, 0x31, 0x54, 0xc7, 0x32, 0x1c, 0xdd, 0xe9, 0x48, 0x85, 0x60,
	0xbc, 0xf0, 0xd5, 0x79, 0xfb, 0xfa, 0x1f, 0xf5, 0x26, 0x17, 0x3b, 0x1d, 0x9a, 0x4e, 0xe7, 0xf7,
	0xce, 0x49, 0x3e, 0x2a, 0x8a, 0xb1, 0x09, 0x34, 0x4a, 0xf4, 0xef, 0xfe, 0xbf, 0x2e, 0x52, 0x30,
	0x57, 0x1d, 0xa3, 0x60, 0xae, 0x66, 0x03, 0x75, 0x89, 0x82, 0x0d, 0x6e, 0x8f, 0xde, 0x37, 0x26,
	0xfa, 0xd8, 0x98, 0xe8, 0x73, 0x63, 0xa2, 0xb7, 0x2f, 0xf3, 0xe0, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0x54, 0x43, 0x38, 0x56, 0x02, 0x00, 0x00,
}

func (m *Targer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Targer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Targer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GroupSub == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.GroupSub.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCmd0X3F7(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.WCsCmdNo == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.WCsCmdNo))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Info) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Info) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Info) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DwRequestId != nil {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.DwRequestId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.GroupType != nil {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.GroupType))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	if m.SubCmd != nil {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.SubCmd))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *Msg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Msg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Msg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tag5 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Tag5.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCmd0X3F7(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Cs == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Cs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCmd0X3F7(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.GroupCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.GroupCode))
		i--
		dAtA[i] = 0x18
	}
	if m.Tag2 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.Tag2))
		i--
		dAtA[i] = 0x10
	}
	if m.WCsCmdNo == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.WCsCmdNo))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Cs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Cs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Cs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.MsgID))
		i--
		dAtA[i] = 0x10
	}
	if m.MsgSeq == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.MsgSeq))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Tag5) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Tag5) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Tag5) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tag2 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Tag2.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCmd0X3F7(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Tag1 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.Tag1))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Tag5Tag2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Tag5Tag2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Tag5Tag2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tag4 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.Tag4))
		i--
		dAtA[i] = 0x20
	}
	if m.Tag3 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.Tag3))
		i--
		dAtA[i] = 0x18
	}
	if m.Tag2 == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.Tag2))
		i--
		dAtA[i] = 0x10
	}
	if m.MsgSeq == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintCmd0X3F7(dAtA, i, uint64(*m.MsgSeq))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCmd0X3F7(dAtA []byte, offset int, v uint64) int {
	offset -= sovCmd0X3F7(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Targer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WCsCmdNo != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.WCsCmdNo))
	}
	if m.GroupSub != nil {
		l = m.GroupSub.Size()
		n += 1 + l + sovCmd0X3F7(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Info) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubCmd != nil {
		n += 2 + sovCmd0X3F7(uint64(*m.SubCmd))
	}
	if m.GroupType != nil {
		n += 2 + sovCmd0X3F7(uint64(*m.GroupType))
	}
	if m.DwRequestId != nil {
		n += 2 + sovCmd0X3F7(uint64(*m.DwRequestId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Msg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WCsCmdNo != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.WCsCmdNo))
	}
	if m.Tag2 != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.Tag2))
	}
	if m.GroupCode != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.GroupCode))
	}
	if m.Cs != nil {
		l = m.Cs.Size()
		n += 1 + l + sovCmd0X3F7(uint64(l))
	}
	if m.Tag5 != nil {
		l = m.Tag5.Size()
		n += 1 + l + sovCmd0X3F7(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Cs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgSeq != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.MsgSeq))
	}
	if m.MsgID != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.MsgID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Tag5) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Tag1 != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.Tag1))
	}
	if m.Tag2 != nil {
		l = m.Tag2.Size()
		n += 1 + l + sovCmd0X3F7(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Tag5Tag2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgSeq != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.MsgSeq))
	}
	if m.Tag2 != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.Tag2))
	}
	if m.Tag3 != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.Tag3))
	}
	if m.Tag4 != nil {
		n += 1 + sovCmd0X3F7(uint64(*m.Tag4))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCmd0X3F7(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCmd0X3F7(x uint64) (n int) {
	return sovCmd0X3F7(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Targer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: targer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: targer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WCsCmdNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WCsCmdNo = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupSub", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GroupSub == nil {
				m.GroupSub = &Info{}
			}
			if err := m.GroupSub.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Info) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubCmd", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubCmd = &v
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupType = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwRequestId", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DwRequestId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Msg) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: msg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: msg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WCsCmdNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WCsCmdNo = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag2", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tag2 = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupCode", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupCode = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cs == nil {
				m.Cs = &Cs{}
			}
			if err := m.Cs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag5", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag5 == nil {
				m.Tag5 = &Tag5{}
			}
			if err := m.Tag5.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Cs) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Cs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Cs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgSeq", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MsgSeq = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgID", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MsgID = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Tag5) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tag5: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tag5: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag1", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tag1 = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag2 == nil {
				m.Tag2 = &Tag5Tag2{}
			}
			if err := m.Tag2.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Tag5Tag2) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tag5_tag2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tag5_tag2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgSeq", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MsgSeq = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag2", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tag2 = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag3", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tag3 = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag4", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tag4 = &v
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipCmd0X3F7(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCmd0X3F7
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCmd0X3F7(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCmd0X3F7
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCmd0X3F7
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCmd0X3F7
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCmd0X3F7
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCmd0X3F7
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCmd0X3F7        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCmd0X3F7          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCmd0X3F7 = fmt.Errorf("proto: unexpected end of group")
)
